<?xml version="1.0" encoding="UTF-8"?>
<c-analysis>
  <header time="2018-12-18 15:00:35">
    <application file="base/utils.c"/>
  </header>
  <cfile>
    <global-variables>
      <gvar name="auth_file"/>
      <gvar name="check_result_buffer_slots"/>
      <gvar name="command_file"/>
      <gvar name="command_file_fp"/>
      <gvar name="external_command_buffer_slots"/>
      <gvar name="global_host_event_handler"/>
      <gvar name="global_service_event_handler"/>
      <gvar name="illegal_object_chars"/>
      <gvar name="illegal_output_chars"/>
      <gvar name="lock_file"/>
      <gvar name="log_archive_path"/>
      <gvar name="log_file"/>
      <gvar name="logging_options"/>
      <gvar name="macro_ondemand"/>
      <gvar name="my_strtok_buffer"/>
      <gvar name="nagios_group"/>
      <gvar name="nagios_user"/>
      <gvar name="ochp_command"/>
      <gvar name="ocsp_command"/>
      <gvar name="original_my_strtok_buffer"/>
      <gvar name="p1_file"/>
      <gvar name="temp_file"/>
    </global-variables>
    <functions>
      <function name="add_macrox_name">
        <parameters>
          <par name="i" nr="1"/>
          <par name="name" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="check_time_against_period">
        <parameters>
          <par name="period_name" nr="2"/>
          <par name="check_time" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="clean_macro_chars">
        <parameters>
          <par name="macro" nr="1"/>
          <par name="options" nr="2"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>illegal_output_chars</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>illegal_output_chars</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
          <post>
            <math>
              <apply>
                <not-null/>
                <return/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="cleanup">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="cleanup_command_file_worker_thread">
        <parameters>
          <par name="arg" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="cleanup_service_result_worker_thread">
        <parameters>
          <par name="arg" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="clear_argv_macros">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="clear_nonvolatile_macros">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="clear_volatile_macros">
        <parameters/>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>macro_ondemand</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>macro_ondemand</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="close_command_file">
        <parameters/>
        <preconditions>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>command_file_fp</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <initialized/>
                <apply>
                  <addressed-value/>
                  <ci>command_file_fp</ci>
                </apply>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>command_file_fp</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="command_file_worker_thread">
        <parameters>
          <par name="arg" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>command_file_fp</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <initialized/>
                <apply>
                  <addressed-value/>
                  <ci>command_file_fp</ci>
                </apply>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>command_file_fp</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="compare_hashdata1">
        <parameters>
          <par name="val1" nr="1"/>
          <par name="val2" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="compare_hashdata2">
        <parameters>
          <par name="val2a" nr="3"/>
          <par name="val2b" nr="4"/>
          <par name="val1b" nr="2"/>
          <par name="val1a" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="contains_illegal_object_chars">
        <parameters>
          <par name="name" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>illegal_object_chars</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>illegal_object_chars</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="daemon_init">
        <parameters/>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>lock_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>lock_file</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="deinit_embedded_perl">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="drop_privileges">
        <parameters>
          <par name="group" nr="2"/>
          <par name="user" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="free_macrox_names">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="free_memory">
        <parameters/>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>command_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>log_archive_path</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>lock_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>auth_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>illegal_object_chars</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>temp_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>nagios_group</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>nagios_user</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>illegal_object_chars</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>log_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>nagios_user</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>ochp_command</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>illegal_output_chars</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>p1_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>original_my_strtok_buffer</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>command_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>temp_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>ocsp_command</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>illegal_output_chars</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>ocsp_command</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>original_my_strtok_buffer</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>global_host_event_handler</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>p1_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>nagios_group</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>log_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>lock_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>ochp_command</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>auth_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>global_service_event_handler</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>log_archive_path</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>global_host_event_handler</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>global_service_event_handler</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="free_notification_list">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="get_datetime_string">
        <parameters>
          <par name="raw_time" nr="1"/>
          <par name="buffer_length" nr="3"/>
          <par name="buffer" nr="2"/>
          <par name="type" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="get_next_log_rotation_time">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="get_next_valid_time">
        <parameters>
          <par name="valid_time" nr="2"/>
          <par name="preferred_time" nr="1"/>
          <par name="period_name" nr="3"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="get_program_modification_date">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="get_program_version">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="get_raw_command_line">
        <parameters>
          <par name="cmd" nr="1"/>
          <par name="buffer_length" nr="3"/>
          <par name="raw_command" nr="2"/>
          <par name="macro_options" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="get_url_encoded_string">
        <parameters>
          <par name="input" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="grab_contact_macros">
        <parameters>
          <par name="cntct" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="grab_datetime_macros">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="grab_host_macros">
        <parameters>
          <par name="hst" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="grab_on_demand_host_macro">
        <parameters>
          <par name="hst" nr="1"/>
          <par name="macro" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="grab_on_demand_macro">
        <parameters>
          <par name="str" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>macro_ondemand</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>macro_ondemand</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="grab_on_demand_service_macro">
        <parameters>
          <par name="macro" nr="2"/>
          <par name="svc" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="grab_service_macros">
        <parameters>
          <par name="svc" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="grab_summary_macros">
        <parameters>
          <par name="temp_contact" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="hashfunc1">
        <parameters>
          <par name="hashslots" nr="2"/>
          <par name="name1" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="hashfunc2">
        <parameters>
          <par name="hashslots" nr="3"/>
          <par name="name2" nr="2"/>
          <par name="name1" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="init_command_file_worker_thread">
        <parameters/>
        <preconditions>
          <pre>
            <math>
              <apply>
                <geq/>
                <ci>external_command_buffer_slots</ci>
                <cn>0</cn>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <leq/>
                <apply>
                  <times/>
                  <ci>external_command_buffer_slots</ci>
                  <cn>4</cn>
                </apply>
                <cn>4294967295</cn>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="init_embedded_perl">
        <parameters>
          <par name="env" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="init_macrox_names">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="init_service_result_worker_thread">
        <parameters/>
        <preconditions>
          <pre>
            <math>
              <apply>
                <geq/>
                <ci>check_result_buffer_slots</ci>
                <cn>0</cn>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <leq/>
                <apply>
                  <times/>
                  <ci>check_result_buffer_slots</ci>
                  <cn>4</cn>
                </apply>
                <cn>4294967295</cn>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="mmap_fclose">
        <parameters>
          <par name="temp_mmapfile" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="mmap_fgets">
        <parameters>
          <par name="temp_mmapfile" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
          <post>
            <math>
              <apply>
                <allocation-base/>
                <return/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="mmap_fgets_multiline">
        <parameters>
          <par name="temp_mmapfile" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="mmap_fopen">
        <parameters>
          <par name="filename" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="my_rename">
        <parameters>
          <par name="dest" nr="2"/>
          <par name="source" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="my_strsep">
        <parameters>
          <par name="stringp" nr="1"/>
          <par name="delim" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="my_strtok">
        <parameters>
          <par name="tokens" nr="2"/>
          <par name="buffer" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>original_my_strtok_buffer</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>original_my_strtok_buffer</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>my_strtok_buffer</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="my_system">
        <parameters>
          <par name="output_length" nr="6"/>
          <par name="cmd" nr="1"/>
          <par name="timeout" nr="2"/>
          <par name="output" nr="5"/>
          <par name="exectime" nr="4"/>
          <par name="early_timeout" nr="3"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="my_system_sighandler">
        <parameters>
          <par name="sig" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="open_command_file">
        <parameters/>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>command_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>command_file</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="process_macros">
        <parameters>
          <par name="buffer_length" nr="3"/>
          <par name="output_buffer" nr="2"/>
          <par name="input_buffer" nr="1"/>
          <par name="options" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="read_svc_message">
        <parameters>
          <par name="message" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="reset_sighandler">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="reset_variables">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="service_check_sighandler">
        <parameters>
          <par name="sig" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="service_result_worker_thread">
        <parameters>
          <par name="arg" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <leq/>
                <ci>logging_options</ci>
                <cn>2147483647</cn>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="set_all_macro_environment_vars">
        <parameters>
          <par name="set" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="set_argv_macro_environment_vars">
        <parameters>
          <par name="set" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="set_macro_environment_var">
        <parameters>
          <par name="value" nr="2"/>
          <par name="set" nr="3"/>
          <par name="name" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="set_macrox_environment_vars">
        <parameters>
          <par name="set" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="setup_sighandler">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="shutdown_command_file_worker_thread">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="shutdown_service_result_worker_thread">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="sighandler">
        <parameters>
          <par name="sig" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="strip">
        <parameters>
          <par name="buffer" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="submit_external_command">
        <parameters>
          <par name="buffer_items" nr="2"/>
          <par name="cmd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="submit_raw_external_command">
        <parameters>
          <par name="buffer_items" nr="3"/>
          <par name="cmd" nr="1"/>
          <par name="ts" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="write_svc_message">
        <parameters>
          <par name="message" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
    </functions>
  </cfile>
</c-analysis>
