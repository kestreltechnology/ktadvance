<?xml version="1.0" encoding="UTF-8"?>
<c-analysis>
  <header time="2018-12-19 16:50:57">
    <application file="run-command.c"/>
  </header>
  <cfile>
    <global-variables>
      <gvar name="environ"/>
      <gvar name="pp_for_signal"/>
    </global-variables>
    <functions>
      <function name="_">
        <parameters>
          <par name="msgid" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
          <post>
            <math>
              <apply>
                <not-null/>
                <return/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="async_die_is_recursing">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="async_exit">
        <parameters>
          <par name="code" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="atfork_parent">
        <parameters>
          <par name="as" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="atfork_prepare">
        <parameters>
          <par name="as" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="bug_die">
        <parameters>
          <par name="msg" nr="2"/>
          <par name="err" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="check_pipe">
        <parameters>
          <par name="err" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="child_close">
        <parameters>
          <par name="fd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="child_close_pair">
        <parameters>
          <par name="fd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="child_die">
        <parameters>
          <par name="err" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="child_die_fn">
        <parameters>
          <par name="params" nr="2"/>
          <par name="err" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="child_dup2">
        <parameters>
          <par name="to" nr="2"/>
          <par name="fd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="child_err_spew">
        <parameters>
          <par name="cmd" nr="1"/>
          <par name="cerr" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="child_error_fn">
        <parameters>
          <par name="params" nr="2"/>
          <par name="err" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="child_process_clear">
        <parameters>
          <par name="child" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="child_process_init">
        <parameters>
          <par name="child" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="child_warn_fn">
        <parameters>
          <par name="params" nr="2"/>
          <par name="err" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="cleanup_children">
        <parameters>
          <par name="in_signal" nr="2"/>
          <par name="sig" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="cleanup_children_on_exit">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="cleanup_children_on_signal">
        <parameters>
          <par name="sig" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="clear_child_for_cleanup">
        <parameters>
          <par name="pid" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="close_pair">
        <parameters>
          <par name="fd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="const_error">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="default_start_failure">
        <parameters>
          <par name="out" nr="1"/>
          <par name="pp_task_cb" nr="3"/>
          <par name="pp_cb" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="default_task_finished">
        <parameters>
          <par name="result" nr="1"/>
          <par name="out" nr="2"/>
          <par name="pp_task_cb" nr="4"/>
          <par name="pp_cb" nr="3"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="die_async">
        <parameters>
          <par name="params" nr="2"/>
          <par name="err" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="exists_in_PATH">
        <parameters>
          <par name="file" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="fake_fatal">
        <parameters>
          <par name="params" nr="2"/>
          <par name="err" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="find_hook">
        <parameters>
          <par name="name" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="finish_async">
        <parameters>
          <par name="async" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="finish_command">
        <parameters>
          <par name="cmd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="finish_command_in_signal">
        <parameters>
          <par name="cmd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="handle_children_on_signal">
        <parameters>
          <par name="signo" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>pp_for_signal</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <initialized/>
                <apply>
                  <addressed-value>
                    <field name="max_processes"/>
                  </addressed-value>
                  <ci>pp_for_signal</ci>
                </apply>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <initialized/>
                <apply>
                  <addressed-value>
                    <field name="children"/>
                  </addressed-value>
                  <ci>pp_for_signal</ci>
                </apply>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>pp_for_signal</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="in_async">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="is_executable">
        <parameters>
          <par name="name" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="kill_children">
        <parameters>
          <par name="signo" nr="2"/>
          <par name="pp" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="locate_in_PATH">
        <parameters>
          <par name="file" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
          <post>
            <math>
              <apply>
                <allocation-base/>
                <return/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="mark_child_for_cleanup">
        <parameters>
          <par name="process" nr="2"/>
          <par name="pid" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="pipe_command">
        <parameters>
          <par name="out" nr="4"/>
          <par name="err_hint" nr="7"/>
          <par name="in_len" nr="3"/>
          <par name="cmd" nr="1"/>
          <par name="out_hint" nr="5"/>
          <par name="in" nr="2"/>
          <par name="err" nr="6"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="pp_buffer_stderr">
        <parameters>
          <par name="output_timeout" nr="2"/>
          <par name="pp" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="pp_cleanup">
        <parameters>
          <par name="pp" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="pp_collect_finished">
        <parameters>
          <par name="pp" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="pp_init">
        <parameters>
          <par name="start_failure" nr="4"/>
          <par name="task_finished" nr="5"/>
          <par name="data" nr="6"/>
          <par name="n" nr="2"/>
          <par name="get_next_task" nr="3"/>
          <par name="pp" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="pp_output">
        <parameters>
          <par name="pp" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="pp_start_one">
        <parameters>
          <par name="pp" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="prep_childenv">
        <parameters>
          <par name="deltaenv" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>environ</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>environ</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
          <post>
            <math>
              <apply>
                <not-null/>
                <return/>
              </apply>
            </math>
          </post>
          <post>
            <math>
              <apply>
                <allocation-base/>
                <return/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="prepare_cmd">
        <parameters>
          <par name="out" nr="1"/>
          <par name="cmd" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="prepare_shell_cmd">
        <parameters>
          <par name="out" nr="1"/>
          <par name="argv" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="pump_io">
        <parameters>
          <par name="nr" nr="2"/>
          <par name="slots" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="pump_io_round">
        <parameters>
          <par name="pfd" nr="3"/>
          <par name="nr" nr="2"/>
          <par name="slots" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_command">
        <parameters>
          <par name="cmd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_command_v_opt">
        <parameters>
          <par name="opt" nr="2"/>
          <par name="argv" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_command_v_opt_cd_env">
        <parameters>
          <par name="dir" nr="3"/>
          <par name="opt" nr="2"/>
          <par name="env" nr="4"/>
          <par name="argv" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_hook_le">
        <parameters>
          <par name="env" nr="1"/>
          <par name="name" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_hook_ve">
        <parameters>
          <par name="args" nr="3"/>
          <par name="env" nr="1"/>
          <par name="name" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_processes_parallel">
        <parameters>
          <par name="start_failure" nr="3"/>
          <par name="task_finished" nr="4"/>
          <par name="pp_cb" nr="5"/>
          <par name="n" nr="1"/>
          <par name="get_next_task" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_thread">
        <parameters>
          <par name="data" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="sane_execvp">
        <parameters>
          <par name="argv" nr="2"/>
          <par name="file" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="set_cloexec">
        <parameters>
          <par name="fd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="st_mult">
        <parameters>
          <par name="b" nr="2"/>
          <par name="a" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="start_async">
        <parameters>
          <par name="async" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="start_command">
        <parameters>
          <par name="cmd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="strbuf_addch">
        <parameters>
          <par name="c" nr="2"/>
          <par name="sb" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="strbuf_addstr">
        <parameters>
          <par name="sb" nr="1"/>
          <par name="s" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="strbuf_avail">
        <parameters>
          <par name="sb" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="strbuf_setlen">
        <parameters>
          <par name="len" nr="2"/>
          <par name="sb" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="trace_add_env">
        <parameters>
          <par name="deltaenv" nr="2"/>
          <par name="dst" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="trace_pass_fl">
        <parameters>
          <par name="key" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="trace_run_command">
        <parameters>
          <par name="cp" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="wait_or_whine">
        <parameters>
          <par name="in_signal" nr="3"/>
          <par name="pid" nr="1"/>
          <par name="argv0" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
    </functions>
  </cfile>
</c-analysis>
