<?xml version="1.0" encoding="UTF-8"?>
<c-analysis>
  <header time="2018-12-19 14:21:59">
    <application file="builtin/receive-pack.c"/>
  </header>
  <cfile>
    <global-variables>
      <gvar name="alt_shallow_file"/>
      <gvar name="head_name"/>
      <gvar name="head_name_to_free"/>
      <gvar name="max_input_size"/>
      <gvar name="namespaced_name"/>
      <gvar name="pack_lockfile"/>
      <gvar name="push_cert_nonce"/>
      <gvar name="push_to_checkout_hook"/>
      <gvar name="refuse_unconfigured_deny_delete_current_msg"/>
      <gvar name="refuse_unconfigured_deny_msg"/>
      <gvar name="service_dir"/>
      <gvar name="tmp_objdir"/>
      <gvar name="transaction"/>
      <gvar name="unpack_limit"/>
      <gvar name="use_sideband"/>
    </global-variables>
    <functions>
      <function name="_">
        <parameters>
          <par name="msgid" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="check_aliased_update">
        <parameters>
          <par name="cmd" nr="1"/>
          <par name="list" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="check_aliased_updates">
        <parameters>
          <par name="commands" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="check_cert_push_options">
        <parameters>
          <par name="push_options" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="check_nonce">
        <parameters>
          <par name="len" nr="2"/>
          <par name="buf___0" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>push_cert_nonce</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>service_dir</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>push_cert_nonce</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>push_cert_nonce</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="cmd_receive_pack">
        <parameters>
          <par name="argv" nr="2"/>
          <par name="argc" nr="1"/>
          <par name="prefix" nr="3"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>pack_lockfile</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>pack_lockfile</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="command_singleton_iterator">
        <parameters>
          <par name="cb_data" nr="1"/>
          <par name="oid" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="const_error">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="copy_to_sideband">
        <parameters>
          <par name="out" nr="2"/>
          <par name="arg" nr="3"/>
          <par name="in" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <geq/>
                <apply>
                  <minus/>
                  <ci>use_sideband</ci>
                  <cn>5</cn>
                </apply>
                <cn>0</cn>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <geq/>
                <apply>
                  <minus/>
                  <ci>use_sideband</ci>
                  <cn>5</cn>
                </apply>
                <cn>-2147483648</cn>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="delete_only">
        <parameters>
          <par name="commands" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="execute_commands">
        <parameters>
          <par name="unpacker_error" nr="2"/>
          <par name="commands" nr="1"/>
          <par name="si" nr="3"/>
          <par name="push_options" nr="4"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>tmp_objdir</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>head_name_to_free</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>head_name_to_free</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="execute_commands_atomic">
        <parameters>
          <par name="commands" nr="1"/>
          <par name="si" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="execute_commands_non_atomic">
        <parameters>
          <par name="commands" nr="1"/>
          <par name="si" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="feed_receive_hook">
        <parameters>
          <par name="state_" nr="1"/>
          <par name="sizep" nr="3"/>
          <par name="bufp" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="find_header">
        <parameters>
          <par name="len" nr="2"/>
          <par name="msg" nr="1"/>
          <par name="key" nr="3"/>
          <par name="next_line" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="git_bswap32">
        <parameters>
          <par name="x" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="hashcmp">
        <parameters>
          <par name="sha1" nr="1"/>
          <par name="sha2" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="hashcpy">
        <parameters>
          <par name="sha_dst" nr="1"/>
          <par name="sha_src" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="head_has_history">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="hmac_sha1">
        <parameters>
          <par name="out" nr="1"/>
          <par name="key_in" nr="2"/>
          <par name="text_len" nr="5"/>
          <par name="key_len" nr="3"/>
          <par name="text" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="is_null_oid">
        <parameters>
          <par name="oid" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="is_ref_checked_out">
        <parameters>
          <par name="ref" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>head_name</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>head_name</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="iterate_receive_command_list">
        <parameters>
          <par name="cb_data" nr="1"/>
          <par name="oid" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="oidclr">
        <parameters>
          <par name="oid" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="oidcmp">
        <parameters>
          <par name="oid1" nr="1"/>
          <par name="oid2" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="oidcpy">
        <parameters>
          <par name="dst" nr="1"/>
          <par name="src" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="parse_deny_action">
        <parameters>
          <par name="value" nr="2"/>
          <par name="var" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="parse_pack_header">
        <parameters>
          <par name="hdr" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="prepare_push_cert_nonce">
        <parameters>
          <par name="stamp" nr="2"/>
          <par name="path" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="prepare_push_cert_sha1">
        <parameters>
          <par name="proc" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>push_cert_nonce</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="prepare_shallow_update">
        <parameters>
          <par name="commands" nr="1"/>
          <par name="si" nr="2"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>alt_shallow_file</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>alt_shallow_file</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="push_header_arg">
        <parameters>
          <par name="args" nr="1"/>
          <par name="hdr" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="push_to_checkout">
        <parameters>
          <par name="env" nr="2"/>
          <par name="sha1" nr="1"/>
          <par name="work_tree" nr="3"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>push_to_checkout_hook</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="push_to_deploy">
        <parameters>
          <par name="env" nr="2"/>
          <par name="sha1" nr="1"/>
          <par name="work_tree" nr="3"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="queue_command">
        <parameters>
          <par name="linelen" nr="3"/>
          <par name="line" nr="2"/>
          <par name="tail" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="queue_commands_from_cert">
        <parameters>
          <par name="push_cert___0" nr="2"/>
          <par name="tail" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="read_head_info">
        <parameters>
          <par name="shallow" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="read_push_options">
        <parameters>
          <par name="options" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="receive_pack_config">
        <parameters>
          <par name="cb" nr="3"/>
          <par name="value" nr="2"/>
          <par name="var" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="refuse_unconfigured_deny">
        <parameters/>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>refuse_unconfigured_deny_msg</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>refuse_unconfigured_deny_msg</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="refuse_unconfigured_deny_delete_current">
        <parameters/>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>refuse_unconfigured_deny_delete_current_msg</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>refuse_unconfigured_deny_delete_current_msg</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="reject_updates_to_hidden">
        <parameters>
          <par name="commands" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="report">
        <parameters>
          <par name="commands" nr="1"/>
          <par name="unpack_status" nr="2"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <geq/>
                <apply>
                  <minus/>
                  <ci>use_sideband</ci>
                  <cn>5</cn>
                </apply>
                <cn>0</cn>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <geq/>
                <apply>
                  <minus/>
                  <ci>use_sideband</ci>
                  <cn>5</cn>
                </apply>
                <cn>-2147483648</cn>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="report_message">
        <parameters>
          <par name="params" nr="3"/>
          <par name="prefix" nr="1"/>
          <par name="err" nr="2"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <geq/>
                <apply>
                  <minus/>
                  <ci>use_sideband</ci>
                  <cn>5</cn>
                </apply>
                <cn>0</cn>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <geq/>
                <apply>
                  <minus/>
                  <ci>use_sideband</ci>
                  <cn>5</cn>
                </apply>
                <cn>-2147483648</cn>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="rollback_lock_file">
        <parameters>
          <par name="lk" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="rp_error">
        <parameters>
          <par name="err" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="rp_warning">
        <parameters>
          <par name="err" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_and_feed_hook">
        <parameters>
          <par name="hook_name" nr="1"/>
          <par name="feed_state" nr="3"/>
          <par name="feed" nr="2"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>tmp_objdir</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_receive_hook">
        <parameters>
          <par name="skip_broken" nr="3"/>
          <par name="commands" nr="1"/>
          <par name="hook_name" nr="2"/>
          <par name="push_options" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_update_hook">
        <parameters>
          <par name="cmd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="run_update_post_hook">
        <parameters>
          <par name="commands" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="set_connectivity_errors">
        <parameters>
          <par name="commands" nr="1"/>
          <par name="si" nr="2"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>tmp_objdir</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="should_process_cmd">
        <parameters>
          <par name="cmd" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="show_one_alternate_ref">
        <parameters>
          <par name="refname" nr="1"/>
          <par name="oid" nr="2"/>
          <par name="data" nr="3"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="show_ref">
        <parameters>
          <par name="oid" nr="2"/>
          <par name="path" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>push_cert_nonce</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="show_ref_cb">
        <parameters>
          <par name="path_full" nr="1"/>
          <par name="flag" nr="3"/>
          <par name="oid" nr="2"/>
          <par name="data" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="skip_prefix">
        <parameters>
          <par name="out" nr="3"/>
          <par name="str" nr="1"/>
          <par name="prefix" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="st_add">
        <parameters>
          <par name="b" nr="2"/>
          <par name="a" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="st_mult">
        <parameters>
          <par name="b" nr="2"/>
          <par name="a" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="strbuf_addstr">
        <parameters>
          <par name="sb" nr="1"/>
          <par name="s" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="strbuf_setlen">
        <parameters>
          <par name="len" nr="2"/>
          <par name="sb" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="trace_pass_fl">
        <parameters>
          <par name="key" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="unpack">
        <parameters>
          <par name="si" nr="2"/>
          <par name="err_fd" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <geq/>
                <ci>max_input_size</ci>
                <cn>0</cn>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <geq/>
                <ci>unpack_limit</ci>
                <cn>0</cn>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="unpack_with_sideband">
        <parameters>
          <par name="si" nr="1"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="update">
        <parameters>
          <par name="cmd" nr="1"/>
          <par name="si" nr="2"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>namespaced_name</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>transaction</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>head_name</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <not-null/>
                <ci>head_name</ci>
              </apply>
            </math>
          </pre>
          <pre>
            <math>
              <apply>
                <allocation-base/>
                <ci>namespaced_name</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="update_shallow_info">
        <parameters>
          <par name="ref" nr="3"/>
          <par name="commands" nr="1"/>
          <par name="si" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="update_shallow_ref">
        <parameters>
          <par name="cmd" nr="1"/>
          <par name="si" nr="2"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>tmp_objdir</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="update_worktree">
        <parameters>
          <par name="sha1" nr="1"/>
        </parameters>
        <preconditions>
          <pre>
            <math>
              <apply>
                <valid-mem/>
                <ci>push_to_checkout_hook</ci>
              </apply>
            </math>
          </pre>
        </preconditions>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="warn_if_skipped_connectivity_check">
        <parameters>
          <par name="commands" nr="1"/>
          <par name="si" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="write_head_info">
        <parameters/>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
    </functions>
  </cfile>
</c-analysis>
