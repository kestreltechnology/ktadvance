<?xml version="1.0" encoding="UTF-8"?>
<c-analysis>
  <header info="cfile" name="cfile" time="2018-11-26 23:51:57.523114"/>
  <cfile name="lib/sendf">
    <data-structures/>
    <functions>
      <function name="Curl_client_write">
        <parameters>
          <par name="conn" nr="1"/>
          <par name="type" nr="2"/>
          <par name="ptr" nr="3"/>
          <par name="len" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_debug">
        <parameters>
          <par name="data" nr="1"/>
          <par name="type" nr="2"/>
          <par name="ptr" nr="3"/>
          <par name="size" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_failf">
        <parameters>
          <par name="data" nr="1"/>
          <par name="fmt" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_infof">
        <parameters>
          <par name="data" nr="1"/>
          <par name="fmt" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_read">
        <parameters>
          <par name="conn" nr="1"/>
          <par name="sockfd" nr="2"/>
          <par name="buf" nr="3"/>
          <par name="sizerequested" nr="4"/>
          <par name="n" nr="5"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_read_plain">
        <parameters>
          <par name="sockfd" nr="1"/>
          <par name="buf" nr="2"/>
          <par name="bytesfromsocket" nr="3"/>
          <par name="n" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_recv_has_postponed_data">
        <parameters>
          <par name="conn" nr="1"/>
          <par name="sockindex" nr="2"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_recv_plain">
        <parameters>
          <par name="conn" nr="1"/>
          <par name="num" nr="2"/>
          <par name="buf" nr="3"/>
          <par name="len" nr="4"/>
          <par name="code" nr="5"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_send_plain">
        <parameters>
          <par name="conn" nr="1"/>
          <par name="num" nr="2"/>
          <par name="mem" nr="3"/>
          <par name="len" nr="4"/>
          <par name="code" nr="5"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_sendf">
        <parameters>
          <par name="sockfd" nr="1"/>
          <par name="conn" nr="2"/>
          <par name="fmt" nr="3"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_write">
        <parameters>
          <par name="conn" nr="1"/>
          <par name="sockfd" nr="2"/>
          <par name="mem" nr="3"/>
          <par name="len" nr="4"/>
          <par name="written" nr="5"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="Curl_write_plain">
        <parameters>
          <par name="conn" nr="1"/>
          <par name="sockfd" nr="2"/>
          <par name="mem" nr="3"/>
          <par name="len" nr="4"/>
          <par name="written" nr="5"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="chop_write">
        <parameters>
          <par name="conn" nr="1"/>
          <par name="type" nr="2"/>
          <par name="optr" nr="3"/>
          <par name="olen" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="convert_lineends">
        <parameters>
          <par name="data" nr="1"/>
          <par name="startPtr" nr="2"/>
          <par name="size" nr="3"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
      <function name="pausewrite">
        <parameters>
          <par name="data" nr="1"/>
          <par name="type" nr="2"/>
          <par name="ptr" nr="3"/>
          <par name="len" nr="4"/>
        </parameters>
        <postconditions>
          <post>
            <math>
              <apply>
                <preserves-all-memory/>
              </apply>
            </math>
          </post>
        </postconditions>
      </function>
    </functions>
  </cfile>
</c-analysis>
